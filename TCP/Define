TCP通信能实现两台计算机之间的数据交互，通信的两端，要严格区分为客户端client和服务端server

两端通信步骤：
    1.服务端程序，需要事先启动，等待客户端的连接
    2.客户端主动连接服务器端，连接成功才能通信。服务端不可以主动连接客户端。

在java中，提供了两个类用于实现tcp通信程序：
    1.客户端：java.net.Socket类。创建Socket对象，向服务端发出连接请求，服务端响应请求，两者建立连接开始通信
    2.服务端：java.net.ServerSocket类。创建ServerSocket对象，相当于开启一个服务，并等待客户端的连接


Socket类：
    该类实现客户端套接字，套接字指的是两台设备之间通讯的端点。
    构造方法：
        public Socket(String host, int port) :创建套接字对象，
            并将其连接到指定主机上的指定端口号。如果指定host是null，则相当于指定地址为回送地址。
        tips：回送地址（127.x.x.x）是本机回送地址Loopback Address，主要用于网络软件测试
            以及本地机进程间通信，无论是什么程序，一旦使用回送地址发送数据，立即返回，不进行任何网络传输。
    成员方法：
        public InputStream getInputStream() 返回此套接字的输入流
            ---如果此Socket具有相关联的通道，则生成的InputStream的所有操作也关联该通道
            ---关闭生成的InputStream也将关闭相关的Socket
        public OutputStream getOutputStream() 返回此套接字的输出流
            ---如果此Socket具有相关联的通道，则生成的OutputStream的所有操作也关联该通道
            ---关闭生成的OutputStream也将关闭相关的Socket
        public void close() 关闭此套接字
            ---一旦一个Socket被关闭，它不可再被使用
            ---关闭此Socket也将关闭相关的InputStream和OutputStream
        public void shutDownOutput() 禁用此套接字的输出流
            ---任何先前写出的数据将被发送，随后终止输出流

ServerSocket类：
    这个类实现了服务器套接字，该对象等待通过网络的请求。
    构造方法：
        public ServerSocket(int port) 使用该构造方法在创建ServerSocket对象时，
            就可以将其绑定到指定的端口号上，参数port就是端口号。
    成员方法：
        public Socket accept() 侦听并接受连接，返回一个新的Socket对象，用于和客户端实现通信。
            该方法会一直阻塞直到建立连接。